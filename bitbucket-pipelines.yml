# Bitbucket Pipelines Template to build, test your Android Application.

# This template contains 3 parallel steps to build Android application, run Android code scanning tool and run unit tests.
# For more details see https://support.atlassian.com/bitbucket-cloud/docs/configure-bitbucket-pipelinesyml/

# Docker for Android SDK 30 with pre-installed build tools and emulator image.
# Note: This docker image is created and maintained by a non official third party. For more details see: https://hub.docker.com/r/androidsdk/android-30
image: androidsdk/android-30

definitions:
   steps:
    - step: &runTestcases          # step to build Android debug application
        name: Execute Unit testcase
        size: 2x
        caches:       # caching speed up subsequent execution https://support.atlassian.com/bitbucket-cloud/docs/cache-dependencies/
          - gradle
        script:
          - cd RocheCommonSDK
          - ./gradlew [PROJECT]:testDebugUnitTest
    - step: &runBuild          # step to build Android debug application
        name: Build Application
        size: 2x
        caches: # caching speed up subsequent execution https://support.atlassian.com/bitbucket-cloud/docs/cache-dependencies/
          - gradle
        script:
          - cd RocheCommonSDK
          - chmod +x gradlew
          - ./gradlew assemblerelease appDistributionUploadRelease --stacktrace
          - ./gradlew biometric:artifactoryPublish
        artifacts:
            - RocheCommonSDK/app/build/outputs/apk/debug/app-debug.apk
            - RocheCommonSDK/app/build/outputs/apk/release/app-release.apk
    - step: &uploadToJFrog          # step to upload the library artifact to JFrog artifactory
        name: Build Application
        size: 2x
        caches:
          - gradle
        script:
          - cd RocheCommonSDK
          - chmod +x gradlew
          - export FIREBASE_TOKEN=1//0gUGFeQf_GYLGCgYIARAAGBASNwF-L9IrTsv3YhcRT_UNWturgA2lnnyjafr47cTitw_khjCCj-5-S5PBKXfVazqA6S_GTwrR5zo
          - ./gradlew aR
          - ./gradlew biometric:artifactoryPublish
    - step: &deployToFirebase          # step to upload the sample application to firebase app distribution
        name: Build Application
        size: 2x
        caches: # caching speed up subsequent execution https://support.atlassian.com/bitbucket-cloud/docs/cache-dependencies/
          - gradle
        script:
          - cd RocheCommonSDK
          - chmod +x gradlew
          - export FIREBASE_TOKEN=1//0gUGFeQf_GYLGCgYIARAAGBASNwF-L9IrTsv3YhcRT_UNWturgA2lnnyjafr47cTitw_khjCCj-5-S5PBKXfVazqA6S_GTwrR5zo
          - ./gradlew assemblerelease appDistributionUploadRelease
pipelines:
  # pipeline definition for all branches
  custom:
    unittestcase-pipeline:
      - variables:
          - name: PROJECT
      - step: *runTestcases
    build-pipeline:
      - variables:
          - name: PROJECT
          - name: BUILD_TYPE
      - step: *runBuild
    upload-jfrog-pipeline:
      - variables:
          - name: PROJECT
      - step: *uploadToJFrog
    deploy-app-firebase-pipeline:
      - step: *deployToFirebase